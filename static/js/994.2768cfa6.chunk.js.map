{"version":3,"file":"static/js/994.2768cfa6.chunk.js","mappings":"wWAsHA,UAlGqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,MAAlC,eAAOC,EAAP,KAAqBC,EAArB,KAAqBA,QAKfC,EAAY,mCAAG,WAAMC,GAAN,kFACnBA,EAAMC,iBACAC,EAAO,IAAIC,SAASH,EAAMI,eAC1BC,EAAO,CACXC,KAAMJ,EAAKK,IAAI,YACfC,MAAON,EAAKK,IAAI,SAChBE,SAAUP,EAAKK,IAAI,aANF,SAQQV,EAAWQ,GARnB,QAQbK,EARa,QASFR,OACfR,GAASiB,EAAAA,EAAAA,GAASD,EAAaR,KAAKU,QACpClB,GAASmB,EAAAA,EAAAA,GAAOH,EAAaR,KAAKY,KAAKR,QAXtB,2CAAH,sDAelB,OACE,UAAC,IAAD,CAAWS,UAAU,OAAOC,SAAS,KAArC,UACGlB,QApBHmB,EAAAA,GAAAA,MAAY,uBAqBV,SAAC,KAAD,KACA,UAAC,IAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAAC,IAAD,CAAQJ,GAAI,CAAEK,EAAG,EAAGC,QAAS,WAA7B,UACE,SAAC,IAAD,OAEF,SAAC,IAAD,CAAYT,UAAU,KAAKU,QAAQ,KAAnC,sBAGA,UAAC,IAAD,CAAKV,UAAU,OAAOW,SAAU3B,EAAcmB,GAAI,CAAES,GAAI,GAAxD,WACE,UAAC,KAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,aAAa,aACb1B,KAAK,WACL2B,QAAQ,yHACRC,UAAQ,EACRC,WAAS,EACTC,GAAG,YACHC,MAAM,YACNC,WAAS,OAGb,SAAC,KAAD,CAAMR,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEE,QAAQ,6IACRC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACN/B,KAAK,QACL0B,aAAa,aAGjB,SAAC,KAAD,CAAMF,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEG,UAAQ,EACRC,WAAS,EACT7B,KAAK,WACL+B,MAAM,WACNE,KAAK,WACLH,GAAG,WACHJ,aAAa,uBAInB,SAAC,IAAD,CACEO,KAAK,SACLJ,WAAS,EACTV,QAAQ,YACRP,GAAI,CAAES,GAAI,EAAGa,GAAI,GAJnB,sBAQA,SAAC,KAAD,CAAMZ,WAAS,EAACa,eAAe,WAA/B,UACE,SAAC,KAAD,CAAMX,MAAI,EAAV,UACE,SAAC,KAAD,CAASY,MAAOC,EAAAA,EAAWC,GAAG,SAA9B","sources":["components/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { NavLink } from 'react-router-dom';\nimport { useRegistrationUserMutation } from 'server/contacts';\nimport { useDispatch } from 'react-redux';\nimport { newToken } from 'redux/sliceToken';\nimport { linkActiv } from 'components/utilits/linkActiv';\nimport { isAuth } from 'redux/sliceAuth';\n\nimport { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const [createUser, { isError }] = useRegistrationUserMutation();\n  const tosty = () => {\n    toast.error('Error Registration');\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const send = {\n      name: data.get('fullName'),\n      email: data.get('email'),\n      password: data.get('password'),\n    };\n    const responsToken = await createUser(send);\n    if (responsToken.data) {\n      dispatch(newToken(responsToken.data.token));\n      dispatch(isAuth(responsToken.data.user.name));\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {isError && tosty()}\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: '#759ab6' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"given-name\"\n                name=\"fullName\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"Full Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                pattern='/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i'\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <NavLink style={linkActiv} to=\"/login\">\n                Already have an account? Sign in\n              </NavLink>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["dispatch","useDispatch","useRegistrationUserMutation","createUser","isError","handleSubmit","event","preventDefault","data","FormData","currentTarget","send","name","get","email","password","responsToken","newToken","token","isAuth","user","component","maxWidth","toast","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","variant","onSubmit","mt","container","spacing","item","xs","autoComplete","pattern","required","fullWidth","id","label","autoFocus","type","mb","justifyContent","style","linkActiv","to"],"sourceRoot":""}